# Generated by Django 5.2.5 on 2025-08-27 03:03

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='PDFDocument',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField(help_text='File size in bytes')),
                ('upload_timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('session_id', models.CharField(db_index=True, max_length=64)),
                ('content_hash', models.CharField(help_text='SHA-256 hash of file content', max_length=64)),
            ],
            options={
                'db_table': 'pdf_documents',
                'ordering': ['-upload_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_type', models.CharField(choices=[('redact', 'Redaction'), ('split', 'Split'), ('merge', 'Merge'), ('extract', 'Extract')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=15)),
                ('progress', models.PositiveSmallIntegerField(default=0, help_text='Progress percentage (0-100)')),
                ('error_messages', models.TextField(blank=True, help_text='Error details if job failed')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='app.pdfdocument')),
            ],
            options={
                'db_table': 'processing_jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RedactionMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='Matched text from PDF')),
                ('confidence_score', models.FloatField(help_text='Fuzzy matching confidence (0-100)')),
                ('page_number', models.PositiveIntegerField()),
                ('approved_status', models.BooleanField(blank=True, help_text='True=approved, False=rejected, None=pending', null=True)),
                ('x_coordinate', models.FloatField(help_text='X coordinate of match on page')),
                ('y_coordinate', models.FloatField(help_text='Y coordinate of match on page')),
                ('width', models.FloatField(help_text='Width of matched text area')),
                ('height', models.FloatField(help_text='Height of matched text area')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='app.processingjob')),
            ],
            options={
                'db_table': 'redaction_matches',
                'ordering': ['-confidence_score', 'page_number'],
            },
        ),
    ]
